[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "matrix-ai-bot"
version = "1.0.0"
description = "AI-powered bot for Matrix messaging platform"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Matrix AI Bot", email = "bot@localhost" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"
dependencies = [
    # Matrix SDK for Python
    "matrix-nio==0.20.2",
    
    # HTTP clients
    "aiohttp==3.8.6",
    "requests==2.31.0",
    
    # LLM providers
    "openai==1.3.7",
    "anthropic==0.7.8",
    
    # Web framework for application service
    "flask==3.0.0",
    
    # Environment management
    "python-dotenv==1.0.0",
    
    # JSON handling
    "jsonschema==4.19.2",
    
    # Async support
    "asyncio-throttle==1.0.2",
    
    # Logging
    "coloredlogs==15.0.1",
    
    # Date/time handling
    "python-dateutil==2.8.2",
    
    # Markdown processing
    "markdown==3.5.1",
    
    # Emoji support
    "emoji==2.8.0",
    
    # Configuration management
    "pyyaml==6.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/matrix-org/matrix-ai-bot"
Repository = "https://github.com/matrix-org/matrix-ai-bot.git"
Documentation = "https://github.com/matrix-org/matrix-ai-bot#readme"
"Bug Tracker" = "https://github.com/matrix-org/matrix-ai-bot/issues"

[project.scripts]
matrix-ai-bot = "bot:main"

[tool.uv]
# UV-specific configuration
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"